#!/bin/bash
# This file prepares your host computer for running the Foodcoop development
# container.

# Sanity tests
if ! which npm &>/dev/null; then
  printf "Please install npm.\n"
  exit 1
fi

if ! which git &>/dev/null; then
  printf "Please install git.\n"
  exit 1
fi

if ! which docker &>/dev/null; then
  printf "Please install docker.\n"
  exit 1
fi

cwd=$(pwd)

printf "Checking out software in %s.\n" "$cwd"

# Wordpress
mkdir -p "${cwd}/foodcoop"
cd "${cwd}/foodcoop"

if [ ! -d "wordpress/foodcoop-test" ]; then
  git clone --recursive git@github.com:foodcoop/foodcoop-test.git wordpress/foodcoop-test
  if [ "$?" -ne "0" ]; then
    printf "There was a problem checking out the wordpress git repo. Maybe a bad password?\n"
    printf "I would suggest starting over.\n"
    exit 1
  fi
else
  printf "foodcop-test already checked out. If you are having problems\n"
  printf "you might want to delete it and re-run this script.\n"
fi

# API
if [ ! -d "api" ]; then
  git clone git@github.com:foodcoop/foodcoop-api.git api
  if [ "$?" -ne "0" ]; then
    printf "There was a problem checking out the api git repo. Maybe a bad password?\n"
    printf "I would suggest starting over.\n"
    exit 1
  fi
  cd api
  npm install
  if [ "$?" -ne "0" ]; then
    printf "There was a problem checking running npm. Are you sure npm is installed?.\n"
    printf "I would suggest starting over.\n"
    exit 1
  fi
else
  printf "api already checked out. If you are having problems\n"
  printf "you might want to delete it and re-run this script.\n"
fi

printf "Downloading config files.\n"

downloader=

if which wget >/dev/null; then
  downloader=wget
elif which curl >/dev/null; then
  downloader="curl -O"
else
  printf "Failed to find either wget or curl!\n"
  exit 1
fi
# Config files.
cd "${cwd}/foodcoop/wordpress/foodcoop-test/"
rm wp-config.php && $downloader https://raw.githubusercontent.com/foodcoop/docker-development/master/conf/wp-config.php
cd "${cwd}/foodcoop/api/"
rm -f config.json && $downloader https://raw.githubusercontent.com/foodcoop/docker-development/master/conf/config.json

printf "Launching Docker image.\n"

docker_ip=127.0.0.1

if which boot2docker > /dev/null; then
  docker_ip=$(boot2docker ip)
elif [[ "$OSTYPE" == "darwin"* ]]; then
  # Try what seems to be the default.
  docker_ip=192.168.99.100
fi

printf "Using %s as your Docker IP address.\n" "$docker_ip"

# See if the container is already ready running and if so stop and remove it.
if docker ps | grep foodcoopdev > /dev/null; then
  docker stop foodcoopdev
fi

if docker inspect foodcoopdev &>/dev/null; then
  docker rm foodcoopdev
fi

docker run -d --name foodcoopdev \
  -v "${cwd}/foodcoop:/var/www/foodcoop" \
  -p $docker_ip:3456:3456 \
  -p $docker_ip:6789:6789 \
  --add-host foodcoopdev:127.0.0.1 \
  jamiemcclelland/foodcoopdev:latest runsvdir

printf "\n\n************\n\n"
printf "Almost done! Just a few more steps:\n\n"
if [ -f /etc/hosts ]; then
  if grep foodcoopdev /etc/hosts >/dev/null; then
    printf "foodcoopdev is already in your hosts file.\n"
  else
    printf "We will now create an /etc/hosts entry so that when you type\n"
    printf "foodcoopdev in your browser, it will resolve to the IP address that\n"
    printf "your docker container is listening on. This requires that you type\n"
    printf "in your sudo password.\n"
    echo "$docker_ip foodcoopdev" | sudo tee -a /etc/hosts >/dev/null
  fi
else
  printf "I can't find an /etc/hosts file on your computer. Maybe you are\n"
  printf "running Windows? You will need to find your hosts file and ensure\n"
  printf "that the domain foodcoopdev is assigned to the IP $docker_ip.\n"
fi
printf "Now, login to your container by typing:\n\n"
printf "  docker exec -it foodcoopdev bash\n\n"
printf "After running this command, you should have a shell in your container.\n"
printf "Next, import the default data by running this command:\n\n"
printf "  /root/import-data\n\n"
printf "That will take a few minutes to complete. Maybe like 10 minutes.\n"
printf "You will know it is done when you see the the cursor following the # symbol.\n"
printf "When you see that #, type exit to return to your docker console:\n\n"
printf "  exit\n\n"

printf "Now you are ready to go. Type the following URLs into your web browser:\n"
printf "Wordpress: http://foodcoopdev:6789/foodcoop-test/\n"
printf "API: http://foodcoopdev:3456/members/66202\n"
printf "\n\n************\n\n"
